[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 7734 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 112 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.035s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 6.428 seconds (JVM running for 7.62) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mr.n.c.ChannelOperationsHandler[0;39m - [id:8c39e366, L:/127.0.0.1:55016 - R:localhost/127.0.0.1:5432] Error was received while reading the incoming data. The connection will be closed. 
java.lang.AbstractMethodError: Must be override
	at com.example.bookreservation.service.AbstractService.getByBookId(AbstractService.java:29)
	at com.example.bookreservation.service.AbstractService$$FastClassBySpringCGLIB$$4718303e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.example.bookreservation.service.AuthorService$$EnhancerBySpringCGLIB$$c60910cb.getByBookId(<generated>)
	at com.example.bookreservation.mapper.BookMapper.getListInfo(BookMapper.java:42)
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:30)
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:16)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
	at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
	at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 8020 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 104 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.036s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.313 seconds (JVM running for 6.365) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 8204 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 111 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.307 seconds (JVM running for 6.263) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 8369 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 114 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.025s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.07 seconds (JVM running for 6.027) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 8542 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 107 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.025s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.97 seconds (JVM running for 5.909) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [9e990e1a-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.FluxMap cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 8703 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 162 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.352 seconds (JVM running for 6.417) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [84fb1949-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.MonoCollectList cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 9589 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 132 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.029s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.382 seconds (JVM running for 6.319) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [0da0212a-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.BlockingIterable cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 10828 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 109 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.039s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.103 seconds (JVM running for 6.125) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [de8c2d06-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: block()/blockFirst()/blockLast() are blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
		at reactor.core.publisher.Mono.block(Mono.java:1703)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 11005 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 117 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.032s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.117 seconds (JVM running for 6.234) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [44047f8d-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.LambdaSubscriber cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 11217 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 93 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.025s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.019 seconds (JVM running for 6.021) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [65597a70-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: block()/blockFirst()/blockLast() are blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
		at reactor.core.publisher.Mono.block(Mono.java:1703)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 11421 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 97 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.383 seconds (JVM running for 6.303) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [d4f349c7-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: Iterating over a toIterable() / toStream() is blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingIterable$SubscriberIterator.hasNext(BlockingIterable.java:161)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingIterable$SubscriberIterator.hasNext(BlockingIterable.java:161)
		at java.util.Iterator.forEachRemaining(Iterator.java:115)
		at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
		at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
		at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
		at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
		at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:12)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 11623 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 91 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.031s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.766 seconds (JVM running for 5.746) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [cf49e817-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.BlockingIterable cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:29)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:29)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:14)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 11986 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 99 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.026s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.943 seconds (JVM running for 5.903) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 12172 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 134 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.025s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.197 seconds (JVM running for 6.229) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 12347 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 97 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.032s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.342 seconds (JVM running for 8.024) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 12505 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 118 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.033s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 7.283 seconds (JVM running for 9.425) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 13009 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 109 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.029s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 6.199 seconds (JVM running for 7.785) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 13250 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 104 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.033s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 6.222 seconds (JVM running for 7.731) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[SpringContextShutdownHook] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 13461 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 92 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.022s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.896 seconds (JVM running for 5.869) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 13618 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 94 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.030s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.661 seconds (JVM running for 7.255) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 13799 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 93 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.032s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.109 seconds (JVM running for 6.05) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [885cb820-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.LambdaSubscriber cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 13977 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 132 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.030s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.064 seconds (JVM running for 6.067) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [8d8f5f45-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: block()/blockFirst()/blockLast() are blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
		at reactor.core.publisher.Mono.block(Mono.java:1703)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:29)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 14395 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 129 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.028s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.323 seconds (JVM running for 6.305) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [198a0b9d-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: Iterating over a toIterable() / toStream() is blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingIterable$SubscriberIterator.hasNext(BlockingIterable.java:161)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingIterable$SubscriberIterator.hasNext(BlockingIterable.java:161)
		at java.util.Iterator.forEachRemaining(Iterator.java:115)
		at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
		at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:647)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:31)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:15)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 14682 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 99 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.025s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.154 seconds (JVM running for 6.091) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [3710589c-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.LambdaSubscriber cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 14894 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 109 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.024s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.899 seconds (JVM running for 5.759) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [d6b2a49a-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: block()/blockFirst()/blockLast() are blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
		at reactor.core.publisher.Mono.block(Mono.java:1703)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:11)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 15357 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 101 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.032s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.949 seconds (JVM running for 7.41) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 15575 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 103 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.029s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.936 seconds (JVM running for 7.341) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 16097 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 115 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.034s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.8 seconds (JVM running for 7.462) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [31ba4437-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.MonoCollectList cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:13)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[SpringContextShutdownHook] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 16432 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 118 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.030s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.796 seconds (JVM running for 7.007) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [111df194-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.ClassCastException: reactor.core.publisher.LambdaMonoSubscriber cannot be cast to java.util.List
	at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:30)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:30)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:14)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 16627 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 104 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.029s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.953 seconds (JVM running for 5.951) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [acfd39f8-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: block()/blockFirst()/blockLast() are blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
		at reactor.core.publisher.Mono.block(Mono.java:1703)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:11)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 16811 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 110 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.024s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.077 seconds (JVM running for 6.031) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 16987 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 95 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.952 seconds (JVM running for 5.922) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [467aabdf-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.IllegalStateException: block()/blockFirst()/blockLast() are blocking, which is not supported in thread reactor-tcp-epoll-1
	at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:83)
		at reactor.core.publisher.Mono.block(Mono.java:1703)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:27)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:11)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 17166 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 89 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.025s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.083 seconds (JVM running for 6.044) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 17828 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 91 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.026s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.96 seconds (JVM running for 5.908) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 18107 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 240 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.026s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.779 seconds (JVM running for 6.774) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mr.c.p.Operators[0;39m - Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: java.lang.NullPointerException
Caused by: java.lang.NullPointerException: null
	at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
	at com.example.bookreservation.mapper.BookMapper.lambda$toDTO$0(BookMapper.java:28)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:86)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mr.c.p.Operators[0;39m - Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: java.lang.NullPointerException
Caused by: java.lang.NullPointerException: null
	at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
	at com.example.bookreservation.mapper.BookMapper.lambda$toDTO$0(BookMapper.java:28)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:86)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mr.c.p.Operators[0;39m - Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: java.lang.NullPointerException
Caused by: java.lang.NullPointerException: null
	at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
	at com.example.bookreservation.mapper.BookMapper.lambda$toDTO$0(BookMapper.java:28)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:86)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mr.c.p.Operators[0;39m - Operator called default onErrorDropped 
reactor.core.Exceptions$ErrorCallbackNotImplemented: java.lang.NullPointerException
Caused by: java.lang.NullPointerException: null
	at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
	at com.example.bookreservation.mapper.BookMapper.lambda$toDTO$0(BookMapper.java:28)
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:250)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:86)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 18310 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 111 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.914 seconds (JVM running for 5.963) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 18534 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 146 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.035s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.225 seconds (JVM running for 6.16) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 18709 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 113 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.114 seconds (JVM running for 6.104) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 18871 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 95 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.032s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 6.417 seconds (JVM running for 7.94) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 19094 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 125 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.113 seconds (JVM running for 5.966) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 19264 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 119 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.027s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.47 seconds (JVM running for 6.436) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 19431 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 128 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.031s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.187 seconds (JVM running for 6.133) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [c52a8b04-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.NullPointerException: null
	at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:12)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [c52a8b04-2]  500 Server Error for HTTP POST "/books/search" 
java.lang.NullPointerException: null
	at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:12)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 19613 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 99 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.025s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.0 seconds (JVM running for 6.026) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [e8d8a306-1]  500 Server Error for HTTP POST "/books/search" 
java.lang.NullPointerException: null
	at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.BookController#getBooksWhithParams(RequestParamsForSearchBooks) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/books/search" [ExceptionHandlingWebHandler]
Stack trace:
		at com.example.bookreservation.dto.BookDTO.addAuthor(BookDTO.java:23)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:28)
		at com.example.bookreservation.mapper.BookMapper.toDTO(BookMapper.java:12)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onNext(FluxUsingWhen.java:358)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:184)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drainRegular(FluxWindowPredicate.java:667)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.drain(FluxWindowPredicate.java:745)
		at reactor.core.publisher.FluxWindowPredicate$WindowFlux.onNext(FluxWindowPredicate.java:787)
		at reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain.onNext(FluxWindowPredicate.java:265)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 19788 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 93 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.030s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.734 seconds (JVM running for 5.685) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 19950 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 99 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.026s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.046 seconds (JVM running for 5.965) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 20164 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 122 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.033s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.003 seconds (JVM running for 5.962) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 20334 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 98 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.028s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 4.904 seconds (JVM running for 5.829) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 6548 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 162 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.037s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 10.279 seconds (JVM running for 12.451) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
[reactor-tcp-epoll-1] [31mWARN [0;39m [36mi.r.p.c.ReactorNettyClient[0;39m - Error: SEVERITY_LOCALIZED=ERROR, SEVERITY_NON_LOCALIZED=ERROR, CODE=42601, MESSAGE=syntax error at or near "$1", POSITION=53, FILE=scan.l, LINE=1180, ROUTINE=scanner_yyerror 
[reactor-tcp-epoll-1] [1;31mERROR[0;39m [36mo.s.b.a.w.r.e.AbstractErrorWebExceptionHandler[0;39m - [0bc2289d-3]  500 Server Error for HTTP POST "/reservation/check" 
org.springframework.r2dbc.BadSqlGrammarException: executeMany; bad SQL grammar [SELECT reserv.* FROM reserv WHERE reserv.book_id IN :ids AND reserv.reservation_date_cancel >= :date]; nested exception is io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: [42601] syntax error at or near "$1"
	at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:235)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.example.bookreservation.controller.ReservController#checkReservedBooksByBookId(RequestParamForCheckReservedBooksByBookId) [DispatcherHandler]
	|_ checkpoint ⇢ HTTP POST "/reservation/check" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.r2dbc.connection.ConnectionFactoryUtils.convertR2dbcException(ConnectionFactoryUtils.java:235)
		at org.springframework.r2dbc.core.DefaultDatabaseClient.lambda$inConnectionMany$8(DefaultDatabaseClient.java:147)
		at reactor.core.publisher.Flux.lambda$onErrorMap$29(Flux.java:6720)
		at reactor.core.publisher.Flux.lambda$onErrorResume$30(Flux.java:6773)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.deferredError(FluxUsingWhen.java:411)
		at reactor.core.publisher.FluxUsingWhen$RollbackInner.onComplete(FluxUsingWhen.java:488)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
		at reactor.pool.SimpleDequePool.maybeRecycleAndDrain(SimpleDequePool.java:494)
		at reactor.pool.SimpleDequePool$QueuePoolRecyclerInner.onComplete(SimpleDequePool.java:719)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.pool.SimpleDequePool$QueuePoolRecyclerMono.subscribe(SimpleDequePool.java:831)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:236)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:201)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoSupplier.subscribe(MonoSupplier.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onError(MonoIgnoreElements.java:83)
		at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:132)
		at reactor.core.publisher.FluxFilter$FilterSubscriber.onError(FluxFilter.java:157)
		at reactor.core.publisher.FluxFilter$FilterConditionalSubscriber.onError(FluxFilter.java:291)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:259)
		at reactor.core.publisher.Operators.error(Operators.java:197)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:52)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onError(FluxUsingWhen.java:377)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:842)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
		at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerError(FluxFlatMap.java:863)
		at reactor.core.publisher.FluxFlatMap$FlatMapInner.onError(FluxFlatMap.java:990)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onError(FluxHandle.java:202)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:255)
		at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:191)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:86)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
		at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
		at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
		at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
		at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
		at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
Caused by: io.r2dbc.postgresql.ExceptionFactory$PostgresqlBadGrammarException: syntax error at or near "$1"
	at io.r2dbc.postgresql.ExceptionFactory.createException(ExceptionFactory.java:86)
	at io.r2dbc.postgresql.ExceptionFactory.handleErrorResponse(ExceptionFactory.java:111)
	at reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber.onNext(FluxHandleFuseable.java:169)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at io.r2dbc.postgresql.util.FluxDiscardOnCancel$FluxDiscardOnCancelSubscriber.onNext(FluxDiscardOnCancel.java:86)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:793)
	at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:718)
	at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:154)
	at io.r2dbc.postgresql.client.ReactorNettyClient$Conversation.emit(ReactorNettyClient.java:735)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.emit(ReactorNettyClient.java:986)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:860)
	at io.r2dbc.postgresql.client.ReactorNettyClient$BackendMessageSubscriber.onNext(ReactorNettyClient.java:767)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:118)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:220)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:280)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:389)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:401)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Starting BookReservationApplication using Java 1.8.0_292 on wolter-pc with PID 6899 (/home/wolter/IdeaProjects/book-reservation/target/classes started by root in /home/wolter/IdeaProjects/book-reservation) 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - No active profile set, falling back to default profiles: default 
[background-preinit] [31mWARN [0;39m [36mo.s.h.c.j.Jackson2ObjectMapperBuilder[0;39m - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Multiple Spring Data modules found, entering strict repository configuration mode! 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Bootstrapping Spring Data R2DBC repositories in DEFAULT mode. 
[main] [34mINFO [0;39m [36mo.s.d.r.c.RepositoryConfigurationDelegate[0;39m - Finished Spring Data repository scanning in 115 ms. Found 6 R2DBC repository interfaces. 
[main] [34mINFO [0;39m [36mo.f.c.i.l.VersionPrinter[0;39m - Flyway Community Edition 7.7.3 by Redgate 
[main] [34mINFO [0;39m [36mo.f.c.i.d.b.DatabaseType[0;39m - Database: jdbc:postgresql://localhost:5432/book-reservation (PostgreSQL 13.2) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbValidate[0;39m - Successfully validated 2 migrations (execution time 00:00.035s) 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Current version of schema "public": 2 
[main] [34mINFO [0;39m [36mo.f.c.i.c.DbMigrate[0;39m - Schema "public" is up to date. No migration necessary. 
[main] [34mINFO [0;39m [36mo.s.b.w.e.n.NettyWebServer[0;39m - Netty started on port 8081 
[main] [34mINFO [0;39m [36mc.e.b.BookReservationApplication[0;39m - Started BookReservationApplication in 5.474 seconds (JVM running for 6.776) 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state LivenessState changed to CORRECT 
[main] [34mINFO [0;39m [36mo.s.b.a.ApplicationAvailabilityBean[0;39m - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC 
